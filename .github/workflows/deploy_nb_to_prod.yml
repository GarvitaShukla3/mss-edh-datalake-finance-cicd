name: Deploy Notebooks to Microsoft Fabric (Restricted + .ipynb Only)

on:
  push:
    branches:
      - main
    paths:
      - deploy/notebook/**/*.ipynb

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Restrict to allowed actor
        run: |
          echo "üîí Triggered by: ${{ github.actor }}"
          if [ "${{ github.actor }}" != "${{ secrets.GARVITA_ID }}" ]; then
            echo "‚ùå Unauthorized actor. Deployment aborted."
            exit 1
          fi

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "FABRIC_WORKSPACE_ID=${{ secrets.FABRIC_WORKSPACE_ID }}" >> $GITHUB_ENV
          echo "FABRIC_ACCESS_TOKEN=${{ secrets.FABRIC_ACCESS_TOKEN }}" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Verify Microsoft Fabric Access
        run: |
          echo "üîê Verifying Fabric access..."

          status_code=$(curl -s -o response.json -w "%{http_code}" \
            --location "https://api.fabric.microsoft.com/v1/workspaces/$FABRIC_WORKSPACE_ID" \
            --header "Authorization: Bearer $FABRIC_ACCESS_TOKEN")

          if [ "$status_code" -ne 200 ]; then
            echo "‚ùå Failed to authenticate or access workspace."
            echo "HTTP status: $status_code"
            echo "Response body:"
            cat response.json
            exit 1
          fi

          echo "‚úÖ Fabric access verified successfully."

      - name: Get Changed .ipynb Files
        id: changed-files
        uses: tj-actions/changed-files@v33
        with:
          files: |
            deploy/notebook/**/*.ipynb

      - name: Deploy Changed Notebooks to Microsoft Fabric
        run: |
          echo "üîç Checking for changed notebooks..."

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *.ipynb ]]; then
              echo "üìò Processing notebook: $file"

              filename=$(basename "$file")
              name="${filename%.*}"

              base64_content=$(base64 -w 0 "$file")

              jq --arg name "$name" \
                 --arg payload "$base64_content" \
                 '.displayName = $name | .definition.parts[0].payload = $payload' \
                 deploy/template.json > deploy/final.json

              echo "üì§ Deploying $filename to Microsoft Fabric..."

              curl --silent --show-error --fail --location \
                --header "Authorization: Bearer $FABRIC_ACCESS_TOKEN" \
                --header "Content-Type: application/json" \
                --data "@deploy/final.json" \
                "https://api.fabric.microsoft.com/v1/workspaces/$FABRIC_WORKSPACE_ID/items"

              echo "‚úÖ Successfully deployed: $filename"
            else
              echo "‚ö†Ô∏è Skipping non-notebook file: $file"
            fi
          done
