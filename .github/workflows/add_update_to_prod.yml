name: Sync Repo to Microsoft Fabric Workspace

on:
  push:
    branches:
      - main
    paths:
      - deploy/notebook/**/*.ipynb

env:
  TENANT_ID: ${{ secrets.FABRIC_TENANT_ID }}
  CLIENT_ID: ${{ secrets.FABRIC_ID }}
  CLIENT_SECRET: ${{ secrets.FABRIC_SECRET_TOKEN }}
  WORKSPACE_ID: ${{ secrets.FABRIC_WORKSPACE_ID }}

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get OAuth2 token
        id: auth
        run: |
          echo "Getting token..."
          TOKEN=$(curl -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=${{ env.CLIENT_ID }}&client_secret=${{ env.CLIENT_SECRET }}&scope=https://api.fabric.microsoft.com/.default" \
            "https://login.microsoftonline.com/${{ env.TENANT_ID }}/oauth2/v2.0/token" | jq -r '.access_token')

          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Sync notebooks to Microsoft Fabric workspace
        env:
          TOKEN: ${{ steps.auth.outputs.token }}
          WORKSPACE_ID: ${{ env.WORKSPACE_ID }}
        run: |
          set -e

          API_BASE="https://api.fabric.microsoft.com/v1/workspaces/${WORKSPACE_ID}/items"

          # Process only notebooks in deploy/notebook folder
          for FILE in $(git ls-files 'deploy/notebook/**/*.ipynb'); do
            echo "Processing $FILE..."

            DISPLAY_NAME=$(basename "$FILE" .ipynb)
            FILE_NAME="${DISPLAY_NAME}.ipynb"

            # Encode notebook content in base64 without line wrap
            CONTENT_BASE64=$(base64 -w 0 "$FILE")

            # Build JSON payload using jq with InlineBase64 payload
            PAYLOAD=$(jq -n \
              --arg dn "$DISPLAY_NAME" \
              --arg fn "$FILE_NAME" \
              --arg payload "$CONTENT_BASE64" \
              '{
                displayName: $dn,
                type: "Notebook",
                definition: {
                  format: "ipynb",
                  parts: [
                    {
                      path: $fn,
                      payload: $payload,
                      payloadType: "InlineBase64"
                    }
                  ]
                }
              }')

            echo "Uploading notebook: $DISPLAY_NAME"

            RESPONSE=$(curl -s -w "\n%{http_code}" -X POST \
              -H "Authorization: Bearer $TOKEN" \
              -H "Content-Type: application/json" \
              --data "$PAYLOAD" \
              "$API_BASE")

            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            BODY_RESP=$(echo "$RESPONSE" | sed '$d')

            echo "HTTP status: $HTTP_CODE"
            echo "Response body: $BODY_RESP"

            if [[ "$HTTP_CODE" =~ ^2 ]]; then
              echo "✅ Successfully uploaded $FILE"
            else
              echo "❌ Failed to upload $FILE"
              exit 1
            fi
          done
