name: Deploy Fabric Pipelines

on:
  push:
    branches:
      - main
    paths:
      - 'deploy/pipeline/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies (jq + Fabric CLI)
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          pip install --user ms-fabric-cli

      - name: Add pip user bin to PATH
        run: echo "${HOME}/.local/bin" >> $GITHUB_PATH

      - name: Get Azure AD access token for Fabric CLI
        id: get_token
        run: |
          RESPONSE=$(curl -s -X POST -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials" \
            -d "client_id=${{ secrets.CLIENT_ID }}" \
            -d "client_secret=${{ secrets.CLIENT_SECRET }}" \
            -d "scope=https://api.fabric.microsoft.com/.default" \
            "https://login.microsoftonline.com/${{ secrets.TENANT_ID }}/oauth2/v2.0/token")

          ACCESS_TOKEN=$(echo "$RESPONSE" | jq -r '.access_token')
          if [[ -z "$ACCESS_TOKEN" || "$ACCESS_TOKEN" == "null" ]]; then
            echo "❌ Failed to get access token"
            echo "$RESPONSE"
            exit 1
          fi
          echo "✅ Access token retrieved"
          echo "FABRIC_ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Inject workspacePath and Import Fabric Pipeline
        env:
          FABRIC_ACCESS_TOKEN: ${{ env.FABRIC_ACCESS_TOKEN }}
        run: |
          export PATH=$HOME/.local/bin:$PATH

          # Find the actual pipeline JSON (not manifest)
          PIPELINE_JSON=$(find deploy/pipeline -type f -name "*.json" ! -name "manifest.json" | head -n 1)

          echo "✅ Found pipeline JSON: $PIPELINE_JSON"

          if [ -z "$PIPELINE_JSON" ]; then
            echo "❌ No pipeline JSON file found."
          exit 1
          fi

          # Inject workspacePath — overwrite or add
          jq '.workspacePath = "/Prod-Fabric-workspace/pipeline"' "$PIPELINE_JSON" > temp.json && mv temp.json "$PIPELINE_JSON"

          # Show updated JSON to confirm
          echo "📄 Updated pipeline JSON:"
          cat "$PIPELINE_JSON"
    
          # Import pipeline
          echo "🚀 Importing pipeline..."
          fab import pipeline --help 


      - name: Show final fab config (for debugging)
        run: |
          export PATH=$HOME/.local/bin:$PATH
          fab config list || echo "fab config list command failed"
