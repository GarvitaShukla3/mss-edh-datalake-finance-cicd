name: Import Fabric Pipelines

on:
  workflow_dispatch:
  push:
    paths:
      - 'deploy/pipeline/**'

env:
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_ID: ${{ secrets.CLIENT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  FABRIC_WORKSPACE_ID: ${{ secrets.FABRIC_WORKSPACE_ID }}

jobs:
  import-pipelines:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Fabric CLI
        run: pip install ms-fabric-cli

      - name: Login to Fabric CLI
        run: |
          fab config set encryption_fallback_enabled true
          fab auth login -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID

          fab ls /Prod-Fabric-workspace.Workspace

      - name: Convert ARM JSON to Fabric format
        run: |
          for dir in deploy/pipeline/*; do
            name=$(basename "$dir")
            arm_json="$dir/$name.json"
            if [ -f "$arm_json" ]; then
              echo "🔁 Converting $arm_json to Fabric-compatible JSON..."
              jq '.resources[0]' "$arm_json" > "$dir/${name}_fabric.json"
            fi
          done



      - name: Import pipelines from folders (fallback to JSON file)
        run: |
          for pipeline_dir in deploy/pipeline/*; do
            if [ -d "$pipeline_dir" ]; then
              pipeline_name=$(basename "$pipeline_dir")
              echo "Contents of $pipeline_dir:"
              ls -l "$pipeline_dir"

              manifest="$pipeline_dir/manifest.json"
              jsondef="$pipeline_dir/${pipeline_name}.json"

              echo "Attempting folder import first..."
              if ! fab import Prod-Fabric-workspace.Workspace/${pipeline_name}.DataPipeline --input "$pipeline_dir" -f; then
                echo "Folder import failed, falling back to JSON import..."
                fab import Prod-Fabric-workspace.Workspace/${pipeline_name}.DataPipeline --input "${name}_fabric.json" -f
              fi

              echo "--------------------------------------------"
            fi
          done

