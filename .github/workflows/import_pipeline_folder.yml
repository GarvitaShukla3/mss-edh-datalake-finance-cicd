name: Deploy Fabric Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-pipeline:
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      TENANT_ID: ${{ secrets.TENANT_ID }}
      FABRIC_WORKSPACE_ID: ${{ secrets.FABRIC_WORKSPACE_ID }}
      FABRIC_WORKSPACE_NAME: ${{ secrets.FABRIC_WORKSPACE_NAME }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install ms-fabric-cli
        run: |
          pip install --upgrade pip
          pip install ms-fabric-cli

      - name: Login to Fabric CLI
        run: |
          fab config set encryption_fallback_enabled true
          fab auth login -u $CLIENT_ID -p $CLIENT_SECRET --tenant $TENANT_ID

      - name: Set CLI mode to interactive
        run: fab config set mode interactive

      - name: Try deploying pipeline via CLI
        continue-on-error: true
        run: |
          echo "Attempting CLI import..."
          # Optional: cd into workspace if supported
          fab cd $FABRIC_WORKSPACE_ID || echo "cd failed, continuing"
          
          # Try full Fabric path
          fab import ${FABRIC_WORKSPACE_NAME}/pipeline_testing.Pipeline --input deploy/pipeline/pipeline_testing/manifest.json || exit 0

      - name: Fallback: Deploy pipeline using REST API
        run: |
          echo "Falling back to REST API deployment..."

          # Get OAuth2 token using client credentials
          TOKEN=$(curl -s -X POST \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "client_id=$CLIENT_ID&client_secret=$CLIENT_SECRET&grant_type=client_credentials&scope=https%3A%2F%2Fapi.fabric.microsoft.com%2F.default" \
            "https://login.microsoftonline.com/$TENANT_ID/oauth2/v2.0/token" | jq -r .access_token)

          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to obtain access token"
            exit 1
          fi

          echo "Access token obtained. Importing pipeline..."

          # Read manifest file and send POST to Fabric API
          curl -X POST \
            "https://api.fabric.microsoft.com/v1/workspaces/$FABRIC_WORKSPACE_ID/dataPipelines" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            --data-binary @deploy/pipeline/pipeline_testing/manifest.json \
            -w "\nHTTP Status: %{http_code}\n"
